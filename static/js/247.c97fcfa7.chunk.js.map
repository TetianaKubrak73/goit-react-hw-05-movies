{"version":3,"file":"static/js/247.c97fcfa7.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/MovieApi.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCast } from '../../services/MovieApi';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const castData = await getCast(movieId);\n        setCast(castData);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n\n      <ul>\n        {cast.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import { Hourglass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Hourglass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"hourglass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      colors={['#306cce', '#72a1ed']}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '0615932ba6624614d34d6b4b170fdaa2';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","getCast","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","_ref2","id","profile_path","original_name","name","character","width","src","concat","alt","Hourglass","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","axios","API_KEY","getTrending","_yield$axios$get","data","abrupt","results","getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}